<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classxcpp_1_1xholder__preamble" kind="class" language="C++" prot="public">
    <compoundname>xcpp::xholder_preamble</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classxcpp_1_1xholder__preamble_1ac9e40bee5fb64b6cf4c7efd9fd3910e9" prot="private" static="no" mutable="no">
        <type><ref refid="structxcpp_1_1xpreamble" kindref="compound">xpreamble</ref> *</type>
        <definition>xpreamble* xcpp::xholder_preamble::p_holder</definition>
        <argsstring></argsstring>
        <name>p_holder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krishna/xeus-cpp/include/xeus-cpp/xholder.hpp" line="55" column="19" bodyfile="/home/krishna/xeus-cpp/include/xeus-cpp/xholder.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classxcpp_1_1xholder__preamble_1afee44086158367b4087e7cfeab513dd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xcpp::xholder_preamble::xholder_preamble</definition>
        <argsstring>()</argsstring>
        <name>xholder_preamble</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krishna/xeus-cpp/include/xeus-cpp/xholder.hpp" line="28" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classxcpp_1_1xholder__preamble_1a0c90c9c1e3a177bb8ce4de5ee35c0763" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xcpp::xholder_preamble::~xholder_preamble</definition>
        <argsstring>()</argsstring>
        <name>~xholder_preamble</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krishna/xeus-cpp/include/xeus-cpp/xholder.hpp" line="29" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classxcpp_1_1xholder__preamble_1aadd821fac9b70fe219ff191ed61f56af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xcpp::xholder_preamble::xholder_preamble</definition>
        <argsstring>(const xholder_preamble &amp;rhs)</argsstring>
        <name>xholder_preamble</name>
        <param>
          <type>const <ref refid="classxcpp_1_1xholder__preamble" kindref="compound">xholder_preamble</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krishna/xeus-cpp/include/xeus-cpp/xholder.hpp" line="30" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classxcpp_1_1xholder__preamble_1ac92418825fce603d3aeb3577622d4ac4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xcpp::xholder_preamble::xholder_preamble</definition>
        <argsstring>(xholder_preamble &amp;&amp;rhs)</argsstring>
        <name>xholder_preamble</name>
        <param>
          <type><ref refid="classxcpp_1_1xholder__preamble" kindref="compound">xholder_preamble</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krishna/xeus-cpp/include/xeus-cpp/xholder.hpp" line="31" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classxcpp_1_1xholder__preamble_1abcbfb399708c6ab4e58728a726137690" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xcpp::xholder_preamble::xholder_preamble</definition>
        <argsstring>(xpreamble *holder)</argsstring>
        <name>xholder_preamble</name>
        <param>
          <type><ref refid="structxcpp_1_1xpreamble" kindref="compound">xpreamble</ref> *</type>
          <declname>holder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krishna/xeus-cpp/include/xeus-cpp/xholder.hpp" line="32" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classxcpp_1_1xholder__preamble_1a6a1dd933e4388c0dd29cdb6072679940" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxcpp_1_1xholder__preamble" kindref="compound">xholder_preamble</ref> &amp;</type>
        <definition>xholder_preamble&amp; xcpp::xholder_preamble::operator=</definition>
        <argsstring>(const xholder_preamble &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classxcpp_1_1xholder__preamble" kindref="compound">xholder_preamble</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krishna/xeus-cpp/include/xeus-cpp/xholder.hpp" line="34" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classxcpp_1_1xholder__preamble_1a7f9dbcdfd18316018225beb025af61e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxcpp_1_1xholder__preamble" kindref="compound">xholder_preamble</ref> &amp;</type>
        <definition>xholder_preamble&amp; xcpp::xholder_preamble::operator=</definition>
        <argsstring>(xholder_preamble &amp;&amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classxcpp_1_1xholder__preamble" kindref="compound">xholder_preamble</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krishna/xeus-cpp/include/xeus-cpp/xholder.hpp" line="35" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classxcpp_1_1xholder__preamble_1a4ee0f98a97820a2ea105ace6f8fea056" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxcpp_1_1xholder__preamble" kindref="compound">xholder_preamble</ref> &amp;</type>
        <definition>xholder_preamble&amp; xcpp::xholder_preamble::operator=</definition>
        <argsstring>(xpreamble *holder)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structxcpp_1_1xpreamble" kindref="compound">xpreamble</ref> *</type>
          <declname>holder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krishna/xeus-cpp/include/xeus-cpp/xholder.hpp" line="37" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classxcpp_1_1xholder__preamble_1a97b060232d3df1a8cf36dc4e1d7e11b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void xcpp::xholder_preamble::swap</definition>
        <argsstring>(xholder_preamble &amp;rhs)</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="classxcpp_1_1xholder__preamble" kindref="compound">xholder_preamble</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krishna/xeus-cpp/include/xeus-cpp/xholder.hpp" line="39" column="14" bodyfile="/home/krishna/xeus-cpp/include/xeus-cpp/xholder.hpp" bodystart="39" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classxcpp_1_1xholder__preamble_1aac63866e5e465093ab5758713faaab16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xcpp::xholder_preamble::apply</definition>
        <argsstring>(const std::string &amp;s, nl::json &amp;kernel_res)</argsstring>
        <name>apply</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>nl::json &amp;</type>
          <declname>kernel_res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krishna/xeus-cpp/include/xeus-cpp/xholder.hpp" line="44" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classxcpp_1_1xholder__preamble_1ac29579637ff9436c7d23a22da76585b8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xcpp::xholder_preamble::is_match</definition>
        <argsstring>(const std::string &amp;s) const</argsstring>
        <name>is_match</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krishna/xeus-cpp/include/xeus-cpp/xholder.hpp" line="45" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classxcpp_1_1xholder__preamble_1aca42cb664f139401d80462cf527f6a3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class D</type>
          </param>
        </templateparamlist>
        <type>D &amp;</type>
        <definition>D&amp; xcpp::xholder_preamble::get_cast</definition>
        <argsstring>()</argsstring>
        <name>get_cast</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krishna/xeus-cpp/include/xeus-cpp/xholder.hpp" line="48" column="11" bodyfile="/home/krishna/xeus-cpp/include/xeus-cpp/xholder.hpp" bodystart="48" bodyend="51"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/krishna/xeus-cpp/include/xeus-cpp/xholder.hpp" line="24" column="5" bodyfile="/home/krishna/xeus-cpp/include/xeus-cpp/xholder.hpp" bodystart="25" bodyend="56"/>
    <listofallmembers>
      <member refid="classxcpp_1_1xholder__preamble_1aac63866e5e465093ab5758713faaab16" prot="public" virt="non-virtual"><scope>xcpp::xholder_preamble</scope><name>apply</name></member>
      <member refid="classxcpp_1_1xholder__preamble_1aca42cb664f139401d80462cf527f6a3f" prot="public" virt="non-virtual"><scope>xcpp::xholder_preamble</scope><name>get_cast</name></member>
      <member refid="classxcpp_1_1xholder__preamble_1ac29579637ff9436c7d23a22da76585b8" prot="public" virt="non-virtual"><scope>xcpp::xholder_preamble</scope><name>is_match</name></member>
      <member refid="classxcpp_1_1xholder__preamble_1a6a1dd933e4388c0dd29cdb6072679940" prot="public" virt="non-virtual"><scope>xcpp::xholder_preamble</scope><name>operator=</name></member>
      <member refid="classxcpp_1_1xholder__preamble_1a7f9dbcdfd18316018225beb025af61e0" prot="public" virt="non-virtual"><scope>xcpp::xholder_preamble</scope><name>operator=</name></member>
      <member refid="classxcpp_1_1xholder__preamble_1a4ee0f98a97820a2ea105ace6f8fea056" prot="public" virt="non-virtual"><scope>xcpp::xholder_preamble</scope><name>operator=</name></member>
      <member refid="classxcpp_1_1xholder__preamble_1ac9e40bee5fb64b6cf4c7efd9fd3910e9" prot="private" virt="non-virtual"><scope>xcpp::xholder_preamble</scope><name>p_holder</name></member>
      <member refid="classxcpp_1_1xholder__preamble_1a97b060232d3df1a8cf36dc4e1d7e11b2" prot="public" virt="non-virtual"><scope>xcpp::xholder_preamble</scope><name>swap</name></member>
      <member refid="classxcpp_1_1xholder__preamble_1afee44086158367b4087e7cfeab513dd5" prot="public" virt="non-virtual"><scope>xcpp::xholder_preamble</scope><name>xholder_preamble</name></member>
      <member refid="classxcpp_1_1xholder__preamble_1aadd821fac9b70fe219ff191ed61f56af" prot="public" virt="non-virtual"><scope>xcpp::xholder_preamble</scope><name>xholder_preamble</name></member>
      <member refid="classxcpp_1_1xholder__preamble_1ac92418825fce603d3aeb3577622d4ac4" prot="public" virt="non-virtual"><scope>xcpp::xholder_preamble</scope><name>xholder_preamble</name></member>
      <member refid="classxcpp_1_1xholder__preamble_1abcbfb399708c6ab4e58728a726137690" prot="public" virt="non-virtual"><scope>xcpp::xholder_preamble</scope><name>xholder_preamble</name></member>
      <member refid="classxcpp_1_1xholder__preamble_1a0c90c9c1e3a177bb8ce4de5ee35c0763" prot="public" virt="non-virtual"><scope>xcpp::xholder_preamble</scope><name>~xholder_preamble</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
